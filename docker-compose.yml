services:
  db:
    image: postgres:16-alpine
    container_name: app_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/00-schema.sql:ro
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "${POSTGRES_USER:-app}",
          "-d",
          "${POSTGRES_DB:-appdb}",
        ]
      interval: 10s
      retries: 5

  backend:
    build: ./backend
    container_name: app_backend
    environment:
      PORT: 8000
      DATABASE_URL: postgres://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-secret}@db:5432/${POSTGRES_DB:-appdb}
    depends_on:
      db:
        condition: service_healthy
    ports: ["8000:8000"]

  frontend:
    build: ./frontend
    container_name: app_frontend
    depends_on: [backend]
    ports: ["5173:80"]
    profiles: ["normal"]

  frontend-dev:
    build:
      context: ./frontend
      target: builder
    working_dir: /web
    command: sh -c "npm ci && npm run dev -- --host 0.0.0.0 --port 5173"
    volumes:
      - ./frontend:/web
      - /web/node_modules
    environment:
      VITE_API: "http://localhost:8000"
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "5174:5173"
    depends_on: [backend]
    profiles: ["dev"]

volumes:
  db-data:
    driver: local
